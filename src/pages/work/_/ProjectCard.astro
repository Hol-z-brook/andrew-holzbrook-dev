---
import { H3, P } from '../../../lib/ui';

interface Props {
  name: string;
  description: string;
  tech: string[];
  class?: string;
}

const { name, description, tech, class: className } = Astro.props;

// Emojis based on project type
const getProjectEmoji = (name: string) => {
  const emojis = {
    'Flutter Desktop': '💻', // Desktop/Cross-platform
    'Next.js Platform': '🌐', // Web Platform
    'Web Cart': '🛒', // E-commerce
    'Marketing Site': '🎯', // Marketing
  };
  return emojis[name as keyof typeof emojis] || '📦';
};

// Tech stack icons mapping
const getTechIcon = (tech: string) => {
  const icons: Record<string, string> = {
    Flutter: '⚡',
    Dart: '🎯',
    React: '⚛️',
    TypeScript: '📘',
    'Next.js': '▲',
    'State Management': '🔄',
    'Prismic CMS': '📝',
    'Responsive Design': '📱',
  };
  return icons[tech] || '💻';
};
---

<div
  class:list={[
    'bg-white rounded-lg shadow-md p-6 space-y-4',
    'transition-all duration-300 ease-in-out',
    'hover:shadow-lg hover:-translate-y-1',
    className,
  ]}
>
  <div class="flex items-center space-x-2">
    <span class="text-2xl">{getProjectEmoji(name)}</span>
    <H3 class="text-lg sm:text-xl font-semibold text-gray-900">{name}</H3>
  </div>

  <P class="text-gray-700">{description}</P>

  <div class="flex flex-wrap gap-2">
    {
      tech.map(tech => (
        <div
          class:list={[
            'bg-gray-100 text-gray-700 text-sm px-3 py-1 rounded-full',
            'flex items-center gap-1',
            'transition-colors duration-200',
            'hover:opacity-80',
          ]}
        >
          <span>{getTechIcon(tech)}</span>
          <span>{tech}</span>
        </div>
      ))
    }
  </div>
</div>
