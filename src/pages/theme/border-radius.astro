---
import * as ThemePage from "./_ThemePage/_index.astro";
import * as App from "../_app/_index.astro";
import ThemeSection from "../../components/theme/ThemeSection.astro";
import ThemeSectionHeader from "../../components/theme/ThemeSectionHeader.astro";
import ThemeSectionHeaderTitle from "../../components/theme/ThemeSectionHeaderTitle.astro";
import ThemeSectionHeaderBody from "../../components/theme/ThemeSectionHeaderBody.astro";
import ThemeSectionBody from "../../components/theme/ThemeSectionBody.astro";

import Box from "../../lib/ui/Box.astro";
import H4 from "../../lib/ui/H4.astro";
import theme from "../../theme";
import PrimaryButton from "../../lib/ui/PrimaryButton.astro";
import OutlinedButton from "../../lib/ui/OutlinedButton.astro";

const sections = [
  { id: 'radius-scale', label: 'Radius Scale' },
  { id: 'component-examples', label: 'Component Examples' }
];
---

<App.Page>
  <App.PageHeader />
  <App.PageBody class="bg-gray-50">
    <App.PageSection>
      <Box class="max-w-[90rem] mx-auto py-16 px-6">
        <ThemePage.Header>
          <ThemePage.BackLink />
          <ThemePage.Title>Border Radius</ThemePage.Title>
          <ThemePage.Description>
            Our border radius system provides consistent corner rounding to create a cohesive and modern interface design.
          </ThemePage.Description>
        </ThemePage.Header>

        <ThemePage.Nav>
          <ThemePage.NavTitle slot="title">Border Radius</ThemePage.NavTitle>
          {sections.map(({ id, label }) => (
            <ThemePage.NavItem href={`#${id}`} label={label} />
          ))}
        </ThemePage.Nav>

        <Box class="space-y-24">
          <!-- Radius Scale -->
          <ThemeSection id="radius-scale">
            <ThemeSectionHeader>
              <ThemeSectionHeaderTitle slot="title">
                Radius Scale
              </ThemeSectionHeaderTitle>
              <ThemeSectionHeaderBody slot="body">
                A comprehensive scale of border radius values to maintain consistent corner rounding across components.
              </ThemeSectionHeaderBody>
            </ThemeSectionHeader>
            <ThemeSectionBody class="grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-12">
              {Object.entries(theme.borderRadius).map(([name, radius]) => (
                <Box class="space-y-6 group">
                  <Box class="relative aspect-square">
                    <Box 
                      class="h-full bg-gradient-to-br from-primary-100 via-primary-300 to-primary-500 group-hover:scale-[0.97] transition-all duration-300 shadow-lg"
                      style={`border-radius: ${radius}`}
                    />
                    <Box 
                      class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center bg-black/30 backdrop-blur-sm text-white font-medium"
                      style={`border-radius: ${radius}`}
                    >
                      <Box class="text-center">
                        <Box class="text-lg font-semibold">{radius}</Box>
                      </Box>
                    </Box>
                  </Box>
                  <Box class="space-y-2">
                    <Box class="text-base font-medium capitalize">{name}</Box>
                    <Box class="text-sm text-gray-500 font-mono">{radius}</Box>
                  </Box>
                </Box>
              ))}
            </ThemeSectionBody>
          </ThemeSection>

          <!-- Component Examples -->
          <ThemeSection id="component-examples">
            <ThemeSectionHeader>
              <ThemeSectionHeaderTitle slot="title">
                Component Examples
              </ThemeSectionHeaderTitle>
              <ThemeSectionHeaderBody slot="body">
                Examples of how border radius is applied to different components to create consistent styling.
              </ThemeSectionHeaderBody>
            </ThemeSectionHeader>
            <ThemeSectionBody class="grid grid-cols-1 lg:grid-cols-2 gap-16">
              <!-- Buttons -->
              <Box class="space-y-8">
                <H4 class="text-2xl font-medium">Buttons</H4>
                <Box class="space-y-8">
                  {Object.entries(theme.borderRadius).map(([name, radius]) => (
                    <Box class="space-y-4">
                      <Box class="text-sm font-medium text-gray-600">{name}</Box>
                      <Box class="flex gap-4">
                        <PrimaryButton radius={radius} />
                        <OutlinedButton radius={radius} />
                      </Box>
                    </Box>
                  ))}
                </Box>
              </Box>

              <!-- Cards -->
              <Box class="space-y-8">
                <H4 class="text-2xl font-medium">Cards</H4>
                <Box class="grid grid-cols-2 gap-6">
                  {Object.entries(theme.borderRadius).map(([name, radius]) => (
                    <Box 
                      class="p-6 bg-white border border-gray-200 shadow-sm hover:shadow-lg transition-shadow group"
                      style={`border-radius: ${radius}`}
                    >
                      <Box class="flex flex-col h-full">
                        <Box class="text-sm font-medium text-gray-900">{name}</Box>
                        <Box class="text-xs text-gray-500 font-mono mt-1">{radius}</Box>
                        <Box class="mt-4 text-xs text-gray-600 group-hover:text-primary-600 transition-colors">
                          Hover to see shadow effect
                        </Box>
                      </Box>
                    </Box>
                  ))}
                </Box>
              </Box>
            </ThemeSectionBody>
          </ThemeSection>
        </Box>
      </Box>
    </App.PageSection>
  </App.PageBody>
</App.Page> 