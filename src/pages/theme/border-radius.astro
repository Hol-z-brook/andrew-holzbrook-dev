---
import * as ThemePage from "./_ThemePage/_index.astro";
import * as ThemeSection from "./_ThemeSection/_index.astro";
import App from "../../lib/app";
import UI from "../../lib/ui";
import theme from "../../theme";

const sections = [
  { id: 'radius-scale', label: 'Radius Scale' },
  { id: 'component-examples', label: 'Component Examples' }
];
---

<App.Page>
  <App.PageHeader />
  <App.PageBody class="bg-gray-50">
    <App.PageSection>
      <UI.Layout.Box class="max-w-[90rem] mx-auto py-16 px-6">
        <ThemePage.Header>
          <ThemePage.BackLink />
          <ThemePage.Title>Border Radius</ThemePage.Title>
          <ThemePage.Description>
            Our border radius system provides consistent corner rounding to create a cohesive and modern interface design.
          </ThemePage.Description>
        </ThemePage.Header>

        <ThemePage.Nav>
          <ThemePage.NavTitle slot="title">Border Radius</ThemePage.NavTitle>
          {sections.map(({ id, label }) => (
            <ThemePage.NavItem href={`#${id}`} label={label} />
          ))}
        </ThemePage.Nav>

        <UI.Layout.Box class="space-y-24">
          <!-- Radius Scale -->
          <ThemeSection.Section id="radius-scale">
            <ThemeSection.Header>
              <ThemeSection.HeaderTitle slot="title">
                Radius Scale
              </ThemeSection.HeaderTitle>
              <ThemeSection.HeaderBody slot="body">
                A comprehensive scale of border radius values to maintain consistent corner rounding across components.
              </ThemeSection.HeaderBody>
            </ThemeSection.Header>
            <ThemeSection.Body class="grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-12">
              {Object.entries(theme.borderRadius).map(([name, radius]) => (
                <UI.Layout.Box class="space-y-6 group">
                  <UI.Layout.Box class="relative aspect-square">
                    <UI.Layout.Box 
                      class="h-full bg-gradient-to-br from-primary-100 via-primary-300 to-primary-500 group-hover:scale-[0.97] transition-all duration-300 shadow-lg"
                      style={`border-radius: ${radius}`}
                    />
                    <UI.Layout.Box 
                      class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center bg-black/30 backdrop-blur-sm text-white font-medium"
                      style={`border-radius: ${radius}`}
                    >
                      <UI.Layout.Box class="text-center">
                        <UI.Layout.Box class="text-lg font-semibold">{radius}</UI.Layout.Box>
                      </UI.Layout.Box>
                    </UI.Layout.Box>
                  </UI.Layout.Box>
                  <UI.Layout.Box class="space-y-2">
                    <UI.Layout.Box class="text-base font-medium capitalize">{name}</UI.Layout.Box>
                    <UI.Layout.Box class="text-sm text-gray-500 font-mono">{radius}</UI.Layout.Box>
                  </UI.Layout.Box>
                </UI.Layout.Box>
              ))}
            </ThemeSection.Body>
          </ThemeSection.Section>

          <!-- Component Examples -->
          <ThemeSection.Section id="component-examples">
            <ThemeSection.Header>
              <ThemeSection.HeaderTitle slot="title">
                Component Examples
              </ThemeSection.HeaderTitle>
              <ThemeSection.HeaderBody slot="body">
                Examples of how border radius is applied to different components to create consistent styling.
              </ThemeSection.HeaderBody>
            </ThemeSection.Header>
            <ThemeSection.Body class="grid grid-cols-1 lg:grid-cols-2 gap-16">
              <!-- Buttons -->
                <UI.Layout.Box class="space-y-8">
                <UI.Typography.H4 class="text-2xl font-medium">Buttons</UI.Typography.H4>
                <UI.Layout.Box class="space-y-8">
                  {Object.entries(theme.borderRadius).map(([name, radius]) => (
                    <UI.Layout.Box class="space-y-4">
                      <UI.Layout.Box class="text-sm font-medium text-gray-600">{name}</UI.Layout.Box>
                      <UI.Layout.Box class="flex gap-4">
                        <UI.Button.Primary radius={radius} />
                        <UI.Button.Outlined radius={radius} />
                      </UI.Layout.Box>
                    </UI.Layout.Box>
                  ))}
                </Box>
              </Box>

              <!-- Cards -->
              <UI.Layout.Box class="space-y-8">
                <UI.Typography.H4 class="text-2xl font-medium">Cards</UI.Typography.H4>
                <UI.Layout.Box class="grid grid-cols-2 gap-6">
                  {Object.entries(theme.borderRadius).map(([name, radius]) => (
                    <UI.Layout.Box 
                      class="p-6 bg-white border border-gray-200 shadow-sm hover:shadow-lg transition-shadow group"
                      style={`border-radius: ${radius}`}
                    >
                      <UI.Layout.Box class="flex flex-col h-full">
                        <UI.Layout.Box class="text-sm font-medium text-gray-900">{name}</UI.Layout.Box>
                        <UI.Layout.Box class="text-xs text-gray-500 font-mono mt-1">{radius}</UI.Layout.Box>
                        <UI.Layout.Box class="mt-4 text-xs text-gray-600 group-hover:text-primary-600 transition-colors">
                          Hover to see shadow effect
                        </UI.Layout.Box>
                      </UI.Layout.Box>
                    </UI.Layout.Box>
                  ))}
                </UI.Layout.Box>
              </UI.Layout.Box>
            </ThemeSection.Body>
          </ThemeSection.Section>
        </UI.Layout.Box>
      </UI.Layout.Box>
    </App.PageSection>
  </App.PageBody>
</App.Page> 